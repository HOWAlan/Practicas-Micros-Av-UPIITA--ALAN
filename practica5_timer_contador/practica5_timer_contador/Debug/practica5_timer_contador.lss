
practica5_timer_contador.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00800060  000007fc  00000890  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  0080006c  0080006c  0000089c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000089c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000128  00000000  00000000  000008f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001b83  00000000  00000000  00000a20  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000038f  00000000  00000000  000025a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000753  00000000  00000000  00002932  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000314  00000000  00000000  00003088  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c6  00000000  00000000  0000339c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005dd  00000000  00000000  00003762  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000108  00000000  00000000  00003d3f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 c9 00 	jmp	0x192	; 0x192 <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ef       	ldi	r30, 0xFC	; 252
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	ac 36       	cpi	r26, 0x6C	; 108
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	ac e6       	ldi	r26, 0x6C	; 108
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a1 37       	cpi	r26, 0x71	; 113
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 03 01 	call	0x206	; 0x206 <main>
  8a:	0c 94 fc 03 	jmp	0x7f8	; 0x7f8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ENVIA_CMD>:
	_delay_ms(1);
	ENVIA_DATO(0b00001110);
	_delay_ms(1);
	ENVIA_DATO(0b00000100);
	_delay_ms(1);
	ENVIA_DATO(0b00000000);
  92:	98 2f       	mov	r25, r24
  94:	90 7f       	andi	r25, 0xF0	; 240
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  96:	95 bb       	out	0x15, r25	; 21
  98:	aa 98       	cbi	0x15, 2	; 21
  9a:	ab 9a       	sbi	0x15, 3	; 21
  9c:	e9 ef       	ldi	r30, 0xF9	; 249
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	31 97       	sbiw	r30, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <ENVIA_CMD+0xe>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <ENVIA_CMD+0x14>
  a6:	00 00       	nop
	cmd_enviar =	(dato & 0xF0);      // se envia el nibble alto
	LCD_PUERTO =  cmd_enviar;       // al puerto
	LCD_PUERTO &=~(1<<LCD_RS);  //  RS = 0
	LCD_PUERTO |= (1<<LCD_E);   //   E = 1
	_delay_ms(1);
	LCD_PUERTO &=~(1<<LCD_E);   //   E = 0
  a8:	ab 98       	cbi	0x15, 3	; 21
  aa:	e3 ec       	ldi	r30, 0xC3	; 195
  ac:	f9 e0       	ldi	r31, 0x09	; 9
  ae:	31 97       	sbiw	r30, 0x01	; 1
  b0:	f1 f7       	brne	.-4      	; 0xae <ENVIA_CMD+0x1c>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <ENVIA_CMD+0x22>
  b4:	00 00       	nop
	_delay_ms(10);
	
	cmd_enviar=	((dato<<4) & 0xF0);  // Se envia el nibble bajo
  b6:	f0 e1       	ldi	r31, 0x10	; 16
  b8:	8f 9f       	mul	r24, r31
  ba:	c0 01       	movw	r24, r0
  bc:	11 24       	eor	r1, r1
	LCD_PUERTO =  cmd_enviar;        // al puerto
  be:	85 bb       	out	0x15, r24	; 21
	LCD_PUERTO &=~(1<<LCD_RS);   //  RS = 0
  c0:	aa 98       	cbi	0x15, 2	; 21
	LCD_PUERTO |= (1<<LCD_E);    //   E = 1
  c2:	ab 9a       	sbi	0x15, 3	; 21
  c4:	89 ef       	ldi	r24, 0xF9	; 249
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	01 97       	sbiw	r24, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <ENVIA_CMD+0x36>
  cc:	00 c0       	rjmp	.+0      	; 0xce <ENVIA_CMD+0x3c>
  ce:	00 00       	nop
	_delay_ms(1);
	LCD_PUERTO &=~(1<<LCD_E);    //    E = 0
  d0:	ab 98       	cbi	0x15, 3	; 21
  d2:	e3 ec       	ldi	r30, 0xC3	; 195
  d4:	f9 e0       	ldi	r31, 0x09	; 9
  d6:	31 97       	sbiw	r30, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <ENVIA_CMD+0x44>
  da:	00 c0       	rjmp	.+0      	; 0xdc <ENVIA_CMD+0x4a>
  dc:	00 00       	nop
  de:	08 95       	ret

000000e0 <LCD_INICIALIZA>:
	}
}

void LCD_INICIALIZA()
{
	ENVIA_CMD(0x02);
  e0:	82 e0       	ldi	r24, 0x02	; 2
  e2:	0e 94 49 00 	call	0x92	; 0x92 <ENVIA_CMD>
	ENVIA_CMD(0x28); // 0010 1000 DL = 0 comunicacion de 4 bits N = 1 Pantalla de 2 lineas F = 0 Caracteres de 5x7 puntos
  e6:	88 e2       	ldi	r24, 0x28	; 40
  e8:	0e 94 49 00 	call	0x92	; 0x92 <ENVIA_CMD>
	ENVIA_CMD(0x0E); // D=1 Display ON Cursor OFF
  ec:	8e e0       	ldi	r24, 0x0E	; 14
  ee:	0e 94 49 00 	call	0x92	; 0x92 <ENVIA_CMD>
	ENVIA_CMD(0x06); // I/D = 1 Incremento Automatico S=0
  f2:	86 e0       	ldi	r24, 0x06	; 6
  f4:	0e 94 49 00 	call	0x92	; 0x92 <ENVIA_CMD>
	ENVIA_CMD(0x01);  // Limpia LCD
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	0e 94 49 00 	call	0x92	; 0x92 <ENVIA_CMD>
	ENVIA_CMD(0X80);
  fe:	80 e8       	ldi	r24, 0x80	; 128
 100:	0e 94 49 00 	call	0x92	; 0x92 <ENVIA_CMD>
 104:	08 95       	ret

00000106 <ENVIA_DATO>:

void ENVIA_DATO(char dato)
{
	char dto_enviar;
	
	dto_enviar=	(dato & 0xF0);      // se envia el nibble alto
 106:	98 2f       	mov	r25, r24
 108:	90 7f       	andi	r25, 0xF0	; 240
	LCD_PUERTO  =  dto_enviar;       // al puerto
 10a:	95 bb       	out	0x15, r25	; 21
	LCD_PUERTO |= (1<<LCD_RS)|(1<<LCD_E);  //  RS = 1   E = 1
 10c:	95 b3       	in	r25, 0x15	; 21
 10e:	9c 60       	ori	r25, 0x0C	; 12
 110:	95 bb       	out	0x15, r25	; 21
 112:	e9 ef       	ldi	r30, 0xF9	; 249
 114:	f0 e0       	ldi	r31, 0x00	; 0
 116:	31 97       	sbiw	r30, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <ENVIA_DATO+0x10>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <ENVIA_DATO+0x16>
 11c:	00 00       	nop
	_delay_ms(1);
	LCD_PUERTO &=~(1<<LCD_E);	//E=0
 11e:	ab 98       	cbi	0x15, 3	; 21
	LCD_PUERTO &=~(1<<LCD_RS);	//RS=0
 120:	aa 98       	cbi	0x15, 2	; 21
 122:	e3 ec       	ldi	r30, 0xC3	; 195
 124:	f9 e0       	ldi	r31, 0x09	; 9
 126:	31 97       	sbiw	r30, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <ENVIA_DATO+0x20>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <ENVIA_DATO+0x26>
 12c:	00 00       	nop
	_delay_ms(10);
	
	dto_enviar=	((dato<<4) & 0xF0);  // Se envia el nibble bajo
 12e:	f0 e1       	ldi	r31, 0x10	; 16
 130:	8f 9f       	mul	r24, r31
 132:	c0 01       	movw	r24, r0
 134:	11 24       	eor	r1, r1
	LCD_PUERTO =  dto_enviar;        // al puerto
 136:	85 bb       	out	0x15, r24	; 21
	LCD_PUERTO |= (1<<LCD_RS)|(1<<LCD_E);  //  RS = 1   E = 1
 138:	85 b3       	in	r24, 0x15	; 21
 13a:	8c 60       	ori	r24, 0x0C	; 12
 13c:	85 bb       	out	0x15, r24	; 21
 13e:	89 ef       	ldi	r24, 0xF9	; 249
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <ENVIA_DATO+0x3c>
 146:	00 c0       	rjmp	.+0      	; 0x148 <ENVIA_DATO+0x42>
 148:	00 00       	nop
	_delay_ms(1);
	LCD_PUERTO &=~(1<<LCD_E);	//E=0
 14a:	ab 98       	cbi	0x15, 3	; 21
	LCD_PUERTO &=~(1<<LCD_RS);	//RS=0
 14c:	aa 98       	cbi	0x15, 2	; 21
 14e:	e3 ec       	ldi	r30, 0xC3	; 195
 150:	f9 e0       	ldi	r31, 0x09	; 9
 152:	31 97       	sbiw	r30, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <ENVIA_DATO+0x4c>
 156:	00 c0       	rjmp	.+0      	; 0x158 <ENVIA_DATO+0x52>
 158:	00 00       	nop
 15a:	08 95       	ret

0000015c <ENVIA_CADENA>:
	_delay_ms(10);
	return;
}

void ENVIA_CADENA(char *dato)
{
 15c:	cf 93       	push	r28
 15e:	df 93       	push	r29
 160:	ec 01       	movw	r28, r24
	int i;
	for(i=0;dato[i]!='\0';i++)
 162:	88 81       	ld	r24, Y
 164:	88 23       	and	r24, r24
 166:	31 f0       	breq	.+12     	; 0x174 <ENVIA_CADENA+0x18>
 168:	21 96       	adiw	r28, 0x01	; 1
	ENVIA_DATO(dato[i]);
 16a:	0e 94 83 00 	call	0x106	; 0x106 <ENVIA_DATO>
}

void ENVIA_CADENA(char *dato)
{
	int i;
	for(i=0;dato[i]!='\0';i++)
 16e:	89 91       	ld	r24, Y+
 170:	81 11       	cpse	r24, r1
 172:	fb cf       	rjmp	.-10     	; 0x16a <ENVIA_CADENA+0xe>
	ENVIA_DATO(dato[i]);
}
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	08 95       	ret

0000017a <LIMPIA_LCD>:

void LIMPIA_LCD ()
{
	ENVIA_CMD (0x01);
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	0e 94 49 00 	call	0x92	; 0x92 <ENVIA_CMD>
 180:	08 95       	ret

00000182 <POS_LINEA1>:

void POS_LINEA1 (char posicion)
{
	char lineal = 0x80;
	posicion= posicion|lineal;
	ENVIA_CMD (posicion);
 182:	80 68       	ori	r24, 0x80	; 128
 184:	0e 94 49 00 	call	0x92	; 0x92 <ENVIA_CMD>
 188:	08 95       	ret

0000018a <APAGAR_CURSOR>:
	_delay_ms (50);
}

void APAGAR_CURSOR()
{
	ENVIA_CMD(0X0C);
 18a:	8c e0       	ldi	r24, 0x0C	; 12
 18c:	0e 94 49 00 	call	0x92	; 0x92 <ENVIA_CMD>
 190:	08 95       	ret

00000192 <__vector_9>:
void ConfigIO();

uint8_t itemCount = 0;
char countText[4]="\0";

ISR(TIMER0_OVF_vect){
 192:	1f 92       	push	r1
 194:	0f 92       	push	r0
 196:	0f b6       	in	r0, 0x3f	; 63
 198:	0f 92       	push	r0
 19a:	11 24       	eor	r1, r1
 19c:	2f 93       	push	r18
 19e:	3f 93       	push	r19
 1a0:	4f 93       	push	r20
 1a2:	5f 93       	push	r21
 1a4:	6f 93       	push	r22
 1a6:	7f 93       	push	r23
 1a8:	8f 93       	push	r24
 1aa:	9f 93       	push	r25
 1ac:	af 93       	push	r26
 1ae:	bf 93       	push	r27
 1b0:	ef 93       	push	r30
 1b2:	ff 93       	push	r31
	LIMPIA_LCD();
 1b4:	0e 94 bd 00 	call	0x17a	; 0x17a <LIMPIA_LCD>
	ENVIA_CADENA("Objetos:");
 1b8:	80 e6       	ldi	r24, 0x60	; 96
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	0e 94 ae 00 	call	0x15c	; 0x15c <ENVIA_CADENA>
	itemCount = 0;
 1c0:	10 92 70 00 	sts	0x0070, r1
}
 1c4:	ff 91       	pop	r31
 1c6:	ef 91       	pop	r30
 1c8:	bf 91       	pop	r27
 1ca:	af 91       	pop	r26
 1cc:	9f 91       	pop	r25
 1ce:	8f 91       	pop	r24
 1d0:	7f 91       	pop	r23
 1d2:	6f 91       	pop	r22
 1d4:	5f 91       	pop	r21
 1d6:	4f 91       	pop	r20
 1d8:	3f 91       	pop	r19
 1da:	2f 91       	pop	r18
 1dc:	0f 90       	pop	r0
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	0f 90       	pop	r0
 1e2:	1f 90       	pop	r1
 1e4:	18 95       	reti

000001e6 <ConfigIO>:
    }
}

void ConfigIO()
{
	cli();
 1e6:	f8 94       	cli
	
	DDRC = 0XFF; //PUERTO DE LA LCD
 1e8:	8f ef       	ldi	r24, 0xFF	; 255
 1ea:	84 bb       	out	0x14, r24	; 20
	PORTC = 0X00;
 1ec:	15 ba       	out	0x15, r1	; 21
	
	DDRB = 0b11111110;
 1ee:	8e ef       	ldi	r24, 0xFE	; 254
 1f0:	87 bb       	out	0x17, r24	; 23
	PORTB =0x01;//
 1f2:	81 e0       	ldi	r24, 0x01	; 1
 1f4:	88 bb       	out	0x18, r24	; 24
	
	TCCR0 |=(1<<CS12)|(1<<CS11)|(1<<CS10);
 1f6:	83 b7       	in	r24, 0x33	; 51
 1f8:	87 60       	ori	r24, 0x07	; 7
 1fa:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1<<TOIE0);
 1fc:	89 b7       	in	r24, 0x39	; 57
 1fe:	81 60       	ori	r24, 0x01	; 1
 200:	89 bf       	out	0x39, r24	; 57
	
	//TCNT0 = PRELOAD;

	sei();
 202:	78 94       	sei
 204:	08 95       	ret

00000206 <main>:
	itemCount = 0;
}

int main(void)
{
	ConfigIO();
 206:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <ConfigIO>
	LCD_INICIALIZA();
 20a:	0e 94 70 00 	call	0xe0	; 0xe0 <LCD_INICIALIZA>
	ENVIA_CADENA("Objetos:");
 20e:	80 e6       	ldi	r24, 0x60	; 96
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	0e 94 ae 00 	call	0x15c	; 0x15c <ENVIA_CADENA>
	APAGAR_CURSOR();
 216:	0e 94 c5 00 	call	0x18a	; 0x18a <APAGAR_CURSOR>
	
    while(1)
    {
        itemCount = TCNT0;
		POS_LINEA1(COUNT_LOC);
		sprintf(countText,"%d",itemCount);
 21a:	09 e6       	ldi	r16, 0x69	; 105
 21c:	10 e0       	ldi	r17, 0x00	; 0
 21e:	cc e6       	ldi	r28, 0x6C	; 108
 220:	d0 e0       	ldi	r29, 0x00	; 0
	ENVIA_CADENA("Objetos:");
	APAGAR_CURSOR();
	
    while(1)
    {
        itemCount = TCNT0;
 222:	82 b7       	in	r24, 0x32	; 50
 224:	80 93 70 00 	sts	0x0070, r24
		POS_LINEA1(COUNT_LOC);
 228:	8a e0       	ldi	r24, 0x0A	; 10
 22a:	0e 94 c1 00 	call	0x182	; 0x182 <POS_LINEA1>
		sprintf(countText,"%d",itemCount);
 22e:	80 91 70 00 	lds	r24, 0x0070
 232:	1f 92       	push	r1
 234:	8f 93       	push	r24
 236:	1f 93       	push	r17
 238:	0f 93       	push	r16
 23a:	df 93       	push	r29
 23c:	cf 93       	push	r28
 23e:	0e 94 2b 01 	call	0x256	; 0x256 <sprintf>
		ENVIA_CADENA(countText);
 242:	ce 01       	movw	r24, r28
 244:	0e 94 ae 00 	call	0x15c	; 0x15c <ENVIA_CADENA>
 248:	0f 90       	pop	r0
 24a:	0f 90       	pop	r0
 24c:	0f 90       	pop	r0
 24e:	0f 90       	pop	r0
 250:	0f 90       	pop	r0
 252:	0f 90       	pop	r0
 254:	e6 cf       	rjmp	.-52     	; 0x222 <main+0x1c>

00000256 <sprintf>:
 256:	ae e0       	ldi	r26, 0x0E	; 14
 258:	b0 e0       	ldi	r27, 0x00	; 0
 25a:	e1 e3       	ldi	r30, 0x31	; 49
 25c:	f1 e0       	ldi	r31, 0x01	; 1
 25e:	0c 94 d3 03 	jmp	0x7a6	; 0x7a6 <__prologue_saves__+0x1c>
 262:	0d 89       	ldd	r16, Y+21	; 0x15
 264:	1e 89       	ldd	r17, Y+22	; 0x16
 266:	86 e0       	ldi	r24, 0x06	; 6
 268:	8c 83       	std	Y+4, r24	; 0x04
 26a:	1a 83       	std	Y+2, r17	; 0x02
 26c:	09 83       	std	Y+1, r16	; 0x01
 26e:	8f ef       	ldi	r24, 0xFF	; 255
 270:	9f e7       	ldi	r25, 0x7F	; 127
 272:	9e 83       	std	Y+6, r25	; 0x06
 274:	8d 83       	std	Y+5, r24	; 0x05
 276:	ae 01       	movw	r20, r28
 278:	47 5e       	subi	r20, 0xE7	; 231
 27a:	5f 4f       	sbci	r21, 0xFF	; 255
 27c:	6f 89       	ldd	r22, Y+23	; 0x17
 27e:	78 8d       	ldd	r23, Y+24	; 0x18
 280:	ce 01       	movw	r24, r28
 282:	01 96       	adiw	r24, 0x01	; 1
 284:	0e 94 4d 01 	call	0x29a	; 0x29a <vfprintf>
 288:	ef 81       	ldd	r30, Y+7	; 0x07
 28a:	f8 85       	ldd	r31, Y+8	; 0x08
 28c:	e0 0f       	add	r30, r16
 28e:	f1 1f       	adc	r31, r17
 290:	10 82       	st	Z, r1
 292:	2e 96       	adiw	r28, 0x0e	; 14
 294:	e4 e0       	ldi	r30, 0x04	; 4
 296:	0c 94 ef 03 	jmp	0x7de	; 0x7de <__epilogue_restores__+0x1c>

0000029a <vfprintf>:
 29a:	ac e0       	ldi	r26, 0x0C	; 12
 29c:	b0 e0       	ldi	r27, 0x00	; 0
 29e:	e3 e5       	ldi	r30, 0x53	; 83
 2a0:	f1 e0       	ldi	r31, 0x01	; 1
 2a2:	0c 94 c5 03 	jmp	0x78a	; 0x78a <__prologue_saves__>
 2a6:	7c 01       	movw	r14, r24
 2a8:	6b 01       	movw	r12, r22
 2aa:	8a 01       	movw	r16, r20
 2ac:	fc 01       	movw	r30, r24
 2ae:	17 82       	std	Z+7, r1	; 0x07
 2b0:	16 82       	std	Z+6, r1	; 0x06
 2b2:	83 81       	ldd	r24, Z+3	; 0x03
 2b4:	81 ff       	sbrs	r24, 1
 2b6:	bd c1       	rjmp	.+890    	; 0x632 <__stack+0x1d3>
 2b8:	ce 01       	movw	r24, r28
 2ba:	01 96       	adiw	r24, 0x01	; 1
 2bc:	4c 01       	movw	r8, r24
 2be:	f7 01       	movw	r30, r14
 2c0:	93 81       	ldd	r25, Z+3	; 0x03
 2c2:	f6 01       	movw	r30, r12
 2c4:	93 fd       	sbrc	r25, 3
 2c6:	85 91       	lpm	r24, Z+
 2c8:	93 ff       	sbrs	r25, 3
 2ca:	81 91       	ld	r24, Z+
 2cc:	6f 01       	movw	r12, r30
 2ce:	88 23       	and	r24, r24
 2d0:	09 f4       	brne	.+2      	; 0x2d4 <vfprintf+0x3a>
 2d2:	ab c1       	rjmp	.+854    	; 0x62a <__stack+0x1cb>
 2d4:	85 32       	cpi	r24, 0x25	; 37
 2d6:	39 f4       	brne	.+14     	; 0x2e6 <vfprintf+0x4c>
 2d8:	93 fd       	sbrc	r25, 3
 2da:	85 91       	lpm	r24, Z+
 2dc:	93 ff       	sbrs	r25, 3
 2de:	81 91       	ld	r24, Z+
 2e0:	6f 01       	movw	r12, r30
 2e2:	85 32       	cpi	r24, 0x25	; 37
 2e4:	29 f4       	brne	.+10     	; 0x2f0 <vfprintf+0x56>
 2e6:	b7 01       	movw	r22, r14
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	0e 94 35 03 	call	0x66a	; 0x66a <fputc>
 2ee:	e7 cf       	rjmp	.-50     	; 0x2be <vfprintf+0x24>
 2f0:	51 2c       	mov	r5, r1
 2f2:	31 2c       	mov	r3, r1
 2f4:	20 e0       	ldi	r18, 0x00	; 0
 2f6:	20 32       	cpi	r18, 0x20	; 32
 2f8:	a0 f4       	brcc	.+40     	; 0x322 <vfprintf+0x88>
 2fa:	8b 32       	cpi	r24, 0x2B	; 43
 2fc:	69 f0       	breq	.+26     	; 0x318 <vfprintf+0x7e>
 2fe:	30 f4       	brcc	.+12     	; 0x30c <vfprintf+0x72>
 300:	80 32       	cpi	r24, 0x20	; 32
 302:	59 f0       	breq	.+22     	; 0x31a <vfprintf+0x80>
 304:	83 32       	cpi	r24, 0x23	; 35
 306:	69 f4       	brne	.+26     	; 0x322 <vfprintf+0x88>
 308:	20 61       	ori	r18, 0x10	; 16
 30a:	2c c0       	rjmp	.+88     	; 0x364 <vfprintf+0xca>
 30c:	8d 32       	cpi	r24, 0x2D	; 45
 30e:	39 f0       	breq	.+14     	; 0x31e <vfprintf+0x84>
 310:	80 33       	cpi	r24, 0x30	; 48
 312:	39 f4       	brne	.+14     	; 0x322 <vfprintf+0x88>
 314:	21 60       	ori	r18, 0x01	; 1
 316:	26 c0       	rjmp	.+76     	; 0x364 <vfprintf+0xca>
 318:	22 60       	ori	r18, 0x02	; 2
 31a:	24 60       	ori	r18, 0x04	; 4
 31c:	23 c0       	rjmp	.+70     	; 0x364 <vfprintf+0xca>
 31e:	28 60       	ori	r18, 0x08	; 8
 320:	21 c0       	rjmp	.+66     	; 0x364 <vfprintf+0xca>
 322:	27 fd       	sbrc	r18, 7
 324:	27 c0       	rjmp	.+78     	; 0x374 <vfprintf+0xda>
 326:	30 ed       	ldi	r19, 0xD0	; 208
 328:	38 0f       	add	r19, r24
 32a:	3a 30       	cpi	r19, 0x0A	; 10
 32c:	78 f4       	brcc	.+30     	; 0x34c <vfprintf+0xb2>
 32e:	26 ff       	sbrs	r18, 6
 330:	06 c0       	rjmp	.+12     	; 0x33e <vfprintf+0xa4>
 332:	fa e0       	ldi	r31, 0x0A	; 10
 334:	5f 9e       	mul	r5, r31
 336:	30 0d       	add	r19, r0
 338:	11 24       	eor	r1, r1
 33a:	53 2e       	mov	r5, r19
 33c:	13 c0       	rjmp	.+38     	; 0x364 <vfprintf+0xca>
 33e:	8a e0       	ldi	r24, 0x0A	; 10
 340:	38 9e       	mul	r3, r24
 342:	30 0d       	add	r19, r0
 344:	11 24       	eor	r1, r1
 346:	33 2e       	mov	r3, r19
 348:	20 62       	ori	r18, 0x20	; 32
 34a:	0c c0       	rjmp	.+24     	; 0x364 <vfprintf+0xca>
 34c:	8e 32       	cpi	r24, 0x2E	; 46
 34e:	21 f4       	brne	.+8      	; 0x358 <vfprintf+0xbe>
 350:	26 fd       	sbrc	r18, 6
 352:	6b c1       	rjmp	.+726    	; 0x62a <__stack+0x1cb>
 354:	20 64       	ori	r18, 0x40	; 64
 356:	06 c0       	rjmp	.+12     	; 0x364 <vfprintf+0xca>
 358:	8c 36       	cpi	r24, 0x6C	; 108
 35a:	11 f4       	brne	.+4      	; 0x360 <vfprintf+0xc6>
 35c:	20 68       	ori	r18, 0x80	; 128
 35e:	02 c0       	rjmp	.+4      	; 0x364 <vfprintf+0xca>
 360:	88 36       	cpi	r24, 0x68	; 104
 362:	41 f4       	brne	.+16     	; 0x374 <vfprintf+0xda>
 364:	f6 01       	movw	r30, r12
 366:	93 fd       	sbrc	r25, 3
 368:	85 91       	lpm	r24, Z+
 36a:	93 ff       	sbrs	r25, 3
 36c:	81 91       	ld	r24, Z+
 36e:	6f 01       	movw	r12, r30
 370:	81 11       	cpse	r24, r1
 372:	c1 cf       	rjmp	.-126    	; 0x2f6 <vfprintf+0x5c>
 374:	98 2f       	mov	r25, r24
 376:	9f 7d       	andi	r25, 0xDF	; 223
 378:	95 54       	subi	r25, 0x45	; 69
 37a:	93 30       	cpi	r25, 0x03	; 3
 37c:	28 f4       	brcc	.+10     	; 0x388 <vfprintf+0xee>
 37e:	0c 5f       	subi	r16, 0xFC	; 252
 380:	1f 4f       	sbci	r17, 0xFF	; 255
 382:	ff e3       	ldi	r31, 0x3F	; 63
 384:	f9 83       	std	Y+1, r31	; 0x01
 386:	0d c0       	rjmp	.+26     	; 0x3a2 <vfprintf+0x108>
 388:	83 36       	cpi	r24, 0x63	; 99
 38a:	31 f0       	breq	.+12     	; 0x398 <vfprintf+0xfe>
 38c:	83 37       	cpi	r24, 0x73	; 115
 38e:	71 f0       	breq	.+28     	; 0x3ac <vfprintf+0x112>
 390:	83 35       	cpi	r24, 0x53	; 83
 392:	09 f0       	breq	.+2      	; 0x396 <vfprintf+0xfc>
 394:	5b c0       	rjmp	.+182    	; 0x44c <vfprintf+0x1b2>
 396:	22 c0       	rjmp	.+68     	; 0x3dc <vfprintf+0x142>
 398:	f8 01       	movw	r30, r16
 39a:	80 81       	ld	r24, Z
 39c:	89 83       	std	Y+1, r24	; 0x01
 39e:	0e 5f       	subi	r16, 0xFE	; 254
 3a0:	1f 4f       	sbci	r17, 0xFF	; 255
 3a2:	44 24       	eor	r4, r4
 3a4:	43 94       	inc	r4
 3a6:	51 2c       	mov	r5, r1
 3a8:	54 01       	movw	r10, r8
 3aa:	15 c0       	rjmp	.+42     	; 0x3d6 <vfprintf+0x13c>
 3ac:	38 01       	movw	r6, r16
 3ae:	f2 e0       	ldi	r31, 0x02	; 2
 3b0:	6f 0e       	add	r6, r31
 3b2:	71 1c       	adc	r7, r1
 3b4:	f8 01       	movw	r30, r16
 3b6:	a0 80       	ld	r10, Z
 3b8:	b1 80       	ldd	r11, Z+1	; 0x01
 3ba:	26 ff       	sbrs	r18, 6
 3bc:	03 c0       	rjmp	.+6      	; 0x3c4 <vfprintf+0x12a>
 3be:	65 2d       	mov	r22, r5
 3c0:	70 e0       	ldi	r23, 0x00	; 0
 3c2:	02 c0       	rjmp	.+4      	; 0x3c8 <vfprintf+0x12e>
 3c4:	6f ef       	ldi	r22, 0xFF	; 255
 3c6:	7f ef       	ldi	r23, 0xFF	; 255
 3c8:	c5 01       	movw	r24, r10
 3ca:	2c 87       	std	Y+12, r18	; 0x0c
 3cc:	0e 94 2a 03 	call	0x654	; 0x654 <strnlen>
 3d0:	2c 01       	movw	r4, r24
 3d2:	83 01       	movw	r16, r6
 3d4:	2c 85       	ldd	r18, Y+12	; 0x0c
 3d6:	2f 77       	andi	r18, 0x7F	; 127
 3d8:	22 2e       	mov	r2, r18
 3da:	17 c0       	rjmp	.+46     	; 0x40a <vfprintf+0x170>
 3dc:	38 01       	movw	r6, r16
 3de:	f2 e0       	ldi	r31, 0x02	; 2
 3e0:	6f 0e       	add	r6, r31
 3e2:	71 1c       	adc	r7, r1
 3e4:	f8 01       	movw	r30, r16
 3e6:	a0 80       	ld	r10, Z
 3e8:	b1 80       	ldd	r11, Z+1	; 0x01
 3ea:	26 ff       	sbrs	r18, 6
 3ec:	03 c0       	rjmp	.+6      	; 0x3f4 <vfprintf+0x15a>
 3ee:	65 2d       	mov	r22, r5
 3f0:	70 e0       	ldi	r23, 0x00	; 0
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <vfprintf+0x15e>
 3f4:	6f ef       	ldi	r22, 0xFF	; 255
 3f6:	7f ef       	ldi	r23, 0xFF	; 255
 3f8:	c5 01       	movw	r24, r10
 3fa:	2c 87       	std	Y+12, r18	; 0x0c
 3fc:	0e 94 1f 03 	call	0x63e	; 0x63e <strnlen_P>
 400:	2c 01       	movw	r4, r24
 402:	2c 85       	ldd	r18, Y+12	; 0x0c
 404:	20 68       	ori	r18, 0x80	; 128
 406:	22 2e       	mov	r2, r18
 408:	83 01       	movw	r16, r6
 40a:	23 fc       	sbrc	r2, 3
 40c:	1b c0       	rjmp	.+54     	; 0x444 <vfprintf+0x1aa>
 40e:	83 2d       	mov	r24, r3
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	48 16       	cp	r4, r24
 414:	59 06       	cpc	r5, r25
 416:	b0 f4       	brcc	.+44     	; 0x444 <vfprintf+0x1aa>
 418:	b7 01       	movw	r22, r14
 41a:	80 e2       	ldi	r24, 0x20	; 32
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	0e 94 35 03 	call	0x66a	; 0x66a <fputc>
 422:	3a 94       	dec	r3
 424:	f4 cf       	rjmp	.-24     	; 0x40e <vfprintf+0x174>
 426:	f5 01       	movw	r30, r10
 428:	27 fc       	sbrc	r2, 7
 42a:	85 91       	lpm	r24, Z+
 42c:	27 fe       	sbrs	r2, 7
 42e:	81 91       	ld	r24, Z+
 430:	5f 01       	movw	r10, r30
 432:	b7 01       	movw	r22, r14
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	0e 94 35 03 	call	0x66a	; 0x66a <fputc>
 43a:	31 10       	cpse	r3, r1
 43c:	3a 94       	dec	r3
 43e:	f1 e0       	ldi	r31, 0x01	; 1
 440:	4f 1a       	sub	r4, r31
 442:	51 08       	sbc	r5, r1
 444:	41 14       	cp	r4, r1
 446:	51 04       	cpc	r5, r1
 448:	71 f7       	brne	.-36     	; 0x426 <vfprintf+0x18c>
 44a:	e5 c0       	rjmp	.+458    	; 0x616 <__stack+0x1b7>
 44c:	84 36       	cpi	r24, 0x64	; 100
 44e:	11 f0       	breq	.+4      	; 0x454 <vfprintf+0x1ba>
 450:	89 36       	cpi	r24, 0x69	; 105
 452:	39 f5       	brne	.+78     	; 0x4a2 <__stack+0x43>
 454:	f8 01       	movw	r30, r16
 456:	27 ff       	sbrs	r18, 7
 458:	07 c0       	rjmp	.+14     	; 0x468 <__stack+0x9>
 45a:	60 81       	ld	r22, Z
 45c:	71 81       	ldd	r23, Z+1	; 0x01
 45e:	82 81       	ldd	r24, Z+2	; 0x02
 460:	93 81       	ldd	r25, Z+3	; 0x03
 462:	0c 5f       	subi	r16, 0xFC	; 252
 464:	1f 4f       	sbci	r17, 0xFF	; 255
 466:	08 c0       	rjmp	.+16     	; 0x478 <__stack+0x19>
 468:	60 81       	ld	r22, Z
 46a:	71 81       	ldd	r23, Z+1	; 0x01
 46c:	88 27       	eor	r24, r24
 46e:	77 fd       	sbrc	r23, 7
 470:	80 95       	com	r24
 472:	98 2f       	mov	r25, r24
 474:	0e 5f       	subi	r16, 0xFE	; 254
 476:	1f 4f       	sbci	r17, 0xFF	; 255
 478:	2f 76       	andi	r18, 0x6F	; 111
 47a:	b2 2e       	mov	r11, r18
 47c:	97 ff       	sbrs	r25, 7
 47e:	09 c0       	rjmp	.+18     	; 0x492 <__stack+0x33>
 480:	90 95       	com	r25
 482:	80 95       	com	r24
 484:	70 95       	com	r23
 486:	61 95       	neg	r22
 488:	7f 4f       	sbci	r23, 0xFF	; 255
 48a:	8f 4f       	sbci	r24, 0xFF	; 255
 48c:	9f 4f       	sbci	r25, 0xFF	; 255
 48e:	20 68       	ori	r18, 0x80	; 128
 490:	b2 2e       	mov	r11, r18
 492:	2a e0       	ldi	r18, 0x0A	; 10
 494:	30 e0       	ldi	r19, 0x00	; 0
 496:	a4 01       	movw	r20, r8
 498:	0e 94 67 03 	call	0x6ce	; 0x6ce <__ultoa_invert>
 49c:	a8 2e       	mov	r10, r24
 49e:	a8 18       	sub	r10, r8
 4a0:	44 c0       	rjmp	.+136    	; 0x52a <__stack+0xcb>
 4a2:	85 37       	cpi	r24, 0x75	; 117
 4a4:	29 f4       	brne	.+10     	; 0x4b0 <__stack+0x51>
 4a6:	2f 7e       	andi	r18, 0xEF	; 239
 4a8:	b2 2e       	mov	r11, r18
 4aa:	2a e0       	ldi	r18, 0x0A	; 10
 4ac:	30 e0       	ldi	r19, 0x00	; 0
 4ae:	25 c0       	rjmp	.+74     	; 0x4fa <__stack+0x9b>
 4b0:	f2 2f       	mov	r31, r18
 4b2:	f9 7f       	andi	r31, 0xF9	; 249
 4b4:	bf 2e       	mov	r11, r31
 4b6:	8f 36       	cpi	r24, 0x6F	; 111
 4b8:	c1 f0       	breq	.+48     	; 0x4ea <__stack+0x8b>
 4ba:	18 f4       	brcc	.+6      	; 0x4c2 <__stack+0x63>
 4bc:	88 35       	cpi	r24, 0x58	; 88
 4be:	79 f0       	breq	.+30     	; 0x4de <__stack+0x7f>
 4c0:	b4 c0       	rjmp	.+360    	; 0x62a <__stack+0x1cb>
 4c2:	80 37       	cpi	r24, 0x70	; 112
 4c4:	19 f0       	breq	.+6      	; 0x4cc <__stack+0x6d>
 4c6:	88 37       	cpi	r24, 0x78	; 120
 4c8:	21 f0       	breq	.+8      	; 0x4d2 <__stack+0x73>
 4ca:	af c0       	rjmp	.+350    	; 0x62a <__stack+0x1cb>
 4cc:	2f 2f       	mov	r18, r31
 4ce:	20 61       	ori	r18, 0x10	; 16
 4d0:	b2 2e       	mov	r11, r18
 4d2:	b4 fe       	sbrs	r11, 4
 4d4:	0d c0       	rjmp	.+26     	; 0x4f0 <__stack+0x91>
 4d6:	8b 2d       	mov	r24, r11
 4d8:	84 60       	ori	r24, 0x04	; 4
 4da:	b8 2e       	mov	r11, r24
 4dc:	09 c0       	rjmp	.+18     	; 0x4f0 <__stack+0x91>
 4de:	24 ff       	sbrs	r18, 4
 4e0:	0a c0       	rjmp	.+20     	; 0x4f6 <__stack+0x97>
 4e2:	9f 2f       	mov	r25, r31
 4e4:	96 60       	ori	r25, 0x06	; 6
 4e6:	b9 2e       	mov	r11, r25
 4e8:	06 c0       	rjmp	.+12     	; 0x4f6 <__stack+0x97>
 4ea:	28 e0       	ldi	r18, 0x08	; 8
 4ec:	30 e0       	ldi	r19, 0x00	; 0
 4ee:	05 c0       	rjmp	.+10     	; 0x4fa <__stack+0x9b>
 4f0:	20 e1       	ldi	r18, 0x10	; 16
 4f2:	30 e0       	ldi	r19, 0x00	; 0
 4f4:	02 c0       	rjmp	.+4      	; 0x4fa <__stack+0x9b>
 4f6:	20 e1       	ldi	r18, 0x10	; 16
 4f8:	32 e0       	ldi	r19, 0x02	; 2
 4fa:	f8 01       	movw	r30, r16
 4fc:	b7 fe       	sbrs	r11, 7
 4fe:	07 c0       	rjmp	.+14     	; 0x50e <__stack+0xaf>
 500:	60 81       	ld	r22, Z
 502:	71 81       	ldd	r23, Z+1	; 0x01
 504:	82 81       	ldd	r24, Z+2	; 0x02
 506:	93 81       	ldd	r25, Z+3	; 0x03
 508:	0c 5f       	subi	r16, 0xFC	; 252
 50a:	1f 4f       	sbci	r17, 0xFF	; 255
 50c:	06 c0       	rjmp	.+12     	; 0x51a <__stack+0xbb>
 50e:	60 81       	ld	r22, Z
 510:	71 81       	ldd	r23, Z+1	; 0x01
 512:	80 e0       	ldi	r24, 0x00	; 0
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	0e 5f       	subi	r16, 0xFE	; 254
 518:	1f 4f       	sbci	r17, 0xFF	; 255
 51a:	a4 01       	movw	r20, r8
 51c:	0e 94 67 03 	call	0x6ce	; 0x6ce <__ultoa_invert>
 520:	a8 2e       	mov	r10, r24
 522:	a8 18       	sub	r10, r8
 524:	fb 2d       	mov	r31, r11
 526:	ff 77       	andi	r31, 0x7F	; 127
 528:	bf 2e       	mov	r11, r31
 52a:	b6 fe       	sbrs	r11, 6
 52c:	0b c0       	rjmp	.+22     	; 0x544 <__stack+0xe5>
 52e:	2b 2d       	mov	r18, r11
 530:	2e 7f       	andi	r18, 0xFE	; 254
 532:	a5 14       	cp	r10, r5
 534:	50 f4       	brcc	.+20     	; 0x54a <__stack+0xeb>
 536:	b4 fe       	sbrs	r11, 4
 538:	0a c0       	rjmp	.+20     	; 0x54e <__stack+0xef>
 53a:	b2 fc       	sbrc	r11, 2
 53c:	08 c0       	rjmp	.+16     	; 0x54e <__stack+0xef>
 53e:	2b 2d       	mov	r18, r11
 540:	2e 7e       	andi	r18, 0xEE	; 238
 542:	05 c0       	rjmp	.+10     	; 0x54e <__stack+0xef>
 544:	7a 2c       	mov	r7, r10
 546:	2b 2d       	mov	r18, r11
 548:	03 c0       	rjmp	.+6      	; 0x550 <__stack+0xf1>
 54a:	7a 2c       	mov	r7, r10
 54c:	01 c0       	rjmp	.+2      	; 0x550 <__stack+0xf1>
 54e:	75 2c       	mov	r7, r5
 550:	24 ff       	sbrs	r18, 4
 552:	0d c0       	rjmp	.+26     	; 0x56e <__stack+0x10f>
 554:	fe 01       	movw	r30, r28
 556:	ea 0d       	add	r30, r10
 558:	f1 1d       	adc	r31, r1
 55a:	80 81       	ld	r24, Z
 55c:	80 33       	cpi	r24, 0x30	; 48
 55e:	11 f4       	brne	.+4      	; 0x564 <__stack+0x105>
 560:	29 7e       	andi	r18, 0xE9	; 233
 562:	09 c0       	rjmp	.+18     	; 0x576 <__stack+0x117>
 564:	22 ff       	sbrs	r18, 2
 566:	06 c0       	rjmp	.+12     	; 0x574 <__stack+0x115>
 568:	73 94       	inc	r7
 56a:	73 94       	inc	r7
 56c:	04 c0       	rjmp	.+8      	; 0x576 <__stack+0x117>
 56e:	82 2f       	mov	r24, r18
 570:	86 78       	andi	r24, 0x86	; 134
 572:	09 f0       	breq	.+2      	; 0x576 <__stack+0x117>
 574:	73 94       	inc	r7
 576:	23 fd       	sbrc	r18, 3
 578:	13 c0       	rjmp	.+38     	; 0x5a0 <__stack+0x141>
 57a:	20 ff       	sbrs	r18, 0
 57c:	06 c0       	rjmp	.+12     	; 0x58a <__stack+0x12b>
 57e:	5a 2c       	mov	r5, r10
 580:	73 14       	cp	r7, r3
 582:	18 f4       	brcc	.+6      	; 0x58a <__stack+0x12b>
 584:	53 0c       	add	r5, r3
 586:	57 18       	sub	r5, r7
 588:	73 2c       	mov	r7, r3
 58a:	73 14       	cp	r7, r3
 58c:	68 f4       	brcc	.+26     	; 0x5a8 <__stack+0x149>
 58e:	b7 01       	movw	r22, r14
 590:	80 e2       	ldi	r24, 0x20	; 32
 592:	90 e0       	ldi	r25, 0x00	; 0
 594:	2c 87       	std	Y+12, r18	; 0x0c
 596:	0e 94 35 03 	call	0x66a	; 0x66a <fputc>
 59a:	73 94       	inc	r7
 59c:	2c 85       	ldd	r18, Y+12	; 0x0c
 59e:	f5 cf       	rjmp	.-22     	; 0x58a <__stack+0x12b>
 5a0:	73 14       	cp	r7, r3
 5a2:	10 f4       	brcc	.+4      	; 0x5a8 <__stack+0x149>
 5a4:	37 18       	sub	r3, r7
 5a6:	01 c0       	rjmp	.+2      	; 0x5aa <__stack+0x14b>
 5a8:	31 2c       	mov	r3, r1
 5aa:	24 ff       	sbrs	r18, 4
 5ac:	12 c0       	rjmp	.+36     	; 0x5d2 <__stack+0x173>
 5ae:	b7 01       	movw	r22, r14
 5b0:	80 e3       	ldi	r24, 0x30	; 48
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	2c 87       	std	Y+12, r18	; 0x0c
 5b6:	0e 94 35 03 	call	0x66a	; 0x66a <fputc>
 5ba:	2c 85       	ldd	r18, Y+12	; 0x0c
 5bc:	22 ff       	sbrs	r18, 2
 5be:	17 c0       	rjmp	.+46     	; 0x5ee <__stack+0x18f>
 5c0:	21 ff       	sbrs	r18, 1
 5c2:	03 c0       	rjmp	.+6      	; 0x5ca <__stack+0x16b>
 5c4:	88 e5       	ldi	r24, 0x58	; 88
 5c6:	90 e0       	ldi	r25, 0x00	; 0
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <__stack+0x16f>
 5ca:	88 e7       	ldi	r24, 0x78	; 120
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	b7 01       	movw	r22, r14
 5d0:	0c c0       	rjmp	.+24     	; 0x5ea <__stack+0x18b>
 5d2:	82 2f       	mov	r24, r18
 5d4:	86 78       	andi	r24, 0x86	; 134
 5d6:	59 f0       	breq	.+22     	; 0x5ee <__stack+0x18f>
 5d8:	21 fd       	sbrc	r18, 1
 5da:	02 c0       	rjmp	.+4      	; 0x5e0 <__stack+0x181>
 5dc:	80 e2       	ldi	r24, 0x20	; 32
 5de:	01 c0       	rjmp	.+2      	; 0x5e2 <__stack+0x183>
 5e0:	8b e2       	ldi	r24, 0x2B	; 43
 5e2:	27 fd       	sbrc	r18, 7
 5e4:	8d e2       	ldi	r24, 0x2D	; 45
 5e6:	b7 01       	movw	r22, r14
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	0e 94 35 03 	call	0x66a	; 0x66a <fputc>
 5ee:	a5 14       	cp	r10, r5
 5f0:	38 f4       	brcc	.+14     	; 0x600 <__stack+0x1a1>
 5f2:	b7 01       	movw	r22, r14
 5f4:	80 e3       	ldi	r24, 0x30	; 48
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	0e 94 35 03 	call	0x66a	; 0x66a <fputc>
 5fc:	5a 94       	dec	r5
 5fe:	f7 cf       	rjmp	.-18     	; 0x5ee <__stack+0x18f>
 600:	aa 94       	dec	r10
 602:	f4 01       	movw	r30, r8
 604:	ea 0d       	add	r30, r10
 606:	f1 1d       	adc	r31, r1
 608:	80 81       	ld	r24, Z
 60a:	b7 01       	movw	r22, r14
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	0e 94 35 03 	call	0x66a	; 0x66a <fputc>
 612:	a1 10       	cpse	r10, r1
 614:	f5 cf       	rjmp	.-22     	; 0x600 <__stack+0x1a1>
 616:	33 20       	and	r3, r3
 618:	09 f4       	brne	.+2      	; 0x61c <__stack+0x1bd>
 61a:	51 ce       	rjmp	.-862    	; 0x2be <vfprintf+0x24>
 61c:	b7 01       	movw	r22, r14
 61e:	80 e2       	ldi	r24, 0x20	; 32
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	0e 94 35 03 	call	0x66a	; 0x66a <fputc>
 626:	3a 94       	dec	r3
 628:	f6 cf       	rjmp	.-20     	; 0x616 <__stack+0x1b7>
 62a:	f7 01       	movw	r30, r14
 62c:	86 81       	ldd	r24, Z+6	; 0x06
 62e:	97 81       	ldd	r25, Z+7	; 0x07
 630:	02 c0       	rjmp	.+4      	; 0x636 <__stack+0x1d7>
 632:	8f ef       	ldi	r24, 0xFF	; 255
 634:	9f ef       	ldi	r25, 0xFF	; 255
 636:	2c 96       	adiw	r28, 0x0c	; 12
 638:	e2 e1       	ldi	r30, 0x12	; 18
 63a:	0c 94 e1 03 	jmp	0x7c2	; 0x7c2 <__epilogue_restores__>

0000063e <strnlen_P>:
 63e:	fc 01       	movw	r30, r24
 640:	05 90       	lpm	r0, Z+
 642:	61 50       	subi	r22, 0x01	; 1
 644:	70 40       	sbci	r23, 0x00	; 0
 646:	01 10       	cpse	r0, r1
 648:	d8 f7       	brcc	.-10     	; 0x640 <strnlen_P+0x2>
 64a:	80 95       	com	r24
 64c:	90 95       	com	r25
 64e:	8e 0f       	add	r24, r30
 650:	9f 1f       	adc	r25, r31
 652:	08 95       	ret

00000654 <strnlen>:
 654:	fc 01       	movw	r30, r24
 656:	61 50       	subi	r22, 0x01	; 1
 658:	70 40       	sbci	r23, 0x00	; 0
 65a:	01 90       	ld	r0, Z+
 65c:	01 10       	cpse	r0, r1
 65e:	d8 f7       	brcc	.-10     	; 0x656 <strnlen+0x2>
 660:	80 95       	com	r24
 662:	90 95       	com	r25
 664:	8e 0f       	add	r24, r30
 666:	9f 1f       	adc	r25, r31
 668:	08 95       	ret

0000066a <fputc>:
 66a:	0f 93       	push	r16
 66c:	1f 93       	push	r17
 66e:	cf 93       	push	r28
 670:	df 93       	push	r29
 672:	18 2f       	mov	r17, r24
 674:	09 2f       	mov	r16, r25
 676:	eb 01       	movw	r28, r22
 678:	8b 81       	ldd	r24, Y+3	; 0x03
 67a:	81 fd       	sbrc	r24, 1
 67c:	03 c0       	rjmp	.+6      	; 0x684 <fputc+0x1a>
 67e:	8f ef       	ldi	r24, 0xFF	; 255
 680:	9f ef       	ldi	r25, 0xFF	; 255
 682:	20 c0       	rjmp	.+64     	; 0x6c4 <fputc+0x5a>
 684:	82 ff       	sbrs	r24, 2
 686:	10 c0       	rjmp	.+32     	; 0x6a8 <fputc+0x3e>
 688:	4e 81       	ldd	r20, Y+6	; 0x06
 68a:	5f 81       	ldd	r21, Y+7	; 0x07
 68c:	2c 81       	ldd	r18, Y+4	; 0x04
 68e:	3d 81       	ldd	r19, Y+5	; 0x05
 690:	42 17       	cp	r20, r18
 692:	53 07       	cpc	r21, r19
 694:	7c f4       	brge	.+30     	; 0x6b4 <fputc+0x4a>
 696:	e8 81       	ld	r30, Y
 698:	f9 81       	ldd	r31, Y+1	; 0x01
 69a:	9f 01       	movw	r18, r30
 69c:	2f 5f       	subi	r18, 0xFF	; 255
 69e:	3f 4f       	sbci	r19, 0xFF	; 255
 6a0:	39 83       	std	Y+1, r19	; 0x01
 6a2:	28 83       	st	Y, r18
 6a4:	10 83       	st	Z, r17
 6a6:	06 c0       	rjmp	.+12     	; 0x6b4 <fputc+0x4a>
 6a8:	e8 85       	ldd	r30, Y+8	; 0x08
 6aa:	f9 85       	ldd	r31, Y+9	; 0x09
 6ac:	81 2f       	mov	r24, r17
 6ae:	09 95       	icall
 6b0:	89 2b       	or	r24, r25
 6b2:	29 f7       	brne	.-54     	; 0x67e <fputc+0x14>
 6b4:	2e 81       	ldd	r18, Y+6	; 0x06
 6b6:	3f 81       	ldd	r19, Y+7	; 0x07
 6b8:	2f 5f       	subi	r18, 0xFF	; 255
 6ba:	3f 4f       	sbci	r19, 0xFF	; 255
 6bc:	3f 83       	std	Y+7, r19	; 0x07
 6be:	2e 83       	std	Y+6, r18	; 0x06
 6c0:	81 2f       	mov	r24, r17
 6c2:	90 2f       	mov	r25, r16
 6c4:	df 91       	pop	r29
 6c6:	cf 91       	pop	r28
 6c8:	1f 91       	pop	r17
 6ca:	0f 91       	pop	r16
 6cc:	08 95       	ret

000006ce <__ultoa_invert>:
 6ce:	fa 01       	movw	r30, r20
 6d0:	aa 27       	eor	r26, r26
 6d2:	28 30       	cpi	r18, 0x08	; 8
 6d4:	51 f1       	breq	.+84     	; 0x72a <__ultoa_invert+0x5c>
 6d6:	20 31       	cpi	r18, 0x10	; 16
 6d8:	81 f1       	breq	.+96     	; 0x73a <__ultoa_invert+0x6c>
 6da:	e8 94       	clt
 6dc:	6f 93       	push	r22
 6de:	6e 7f       	andi	r22, 0xFE	; 254
 6e0:	6e 5f       	subi	r22, 0xFE	; 254
 6e2:	7f 4f       	sbci	r23, 0xFF	; 255
 6e4:	8f 4f       	sbci	r24, 0xFF	; 255
 6e6:	9f 4f       	sbci	r25, 0xFF	; 255
 6e8:	af 4f       	sbci	r26, 0xFF	; 255
 6ea:	b1 e0       	ldi	r27, 0x01	; 1
 6ec:	3e d0       	rcall	.+124    	; 0x76a <__ultoa_invert+0x9c>
 6ee:	b4 e0       	ldi	r27, 0x04	; 4
 6f0:	3c d0       	rcall	.+120    	; 0x76a <__ultoa_invert+0x9c>
 6f2:	67 0f       	add	r22, r23
 6f4:	78 1f       	adc	r23, r24
 6f6:	89 1f       	adc	r24, r25
 6f8:	9a 1f       	adc	r25, r26
 6fa:	a1 1d       	adc	r26, r1
 6fc:	68 0f       	add	r22, r24
 6fe:	79 1f       	adc	r23, r25
 700:	8a 1f       	adc	r24, r26
 702:	91 1d       	adc	r25, r1
 704:	a1 1d       	adc	r26, r1
 706:	6a 0f       	add	r22, r26
 708:	71 1d       	adc	r23, r1
 70a:	81 1d       	adc	r24, r1
 70c:	91 1d       	adc	r25, r1
 70e:	a1 1d       	adc	r26, r1
 710:	20 d0       	rcall	.+64     	; 0x752 <__ultoa_invert+0x84>
 712:	09 f4       	brne	.+2      	; 0x716 <__ultoa_invert+0x48>
 714:	68 94       	set
 716:	3f 91       	pop	r19
 718:	2a e0       	ldi	r18, 0x0A	; 10
 71a:	26 9f       	mul	r18, r22
 71c:	11 24       	eor	r1, r1
 71e:	30 19       	sub	r19, r0
 720:	30 5d       	subi	r19, 0xD0	; 208
 722:	31 93       	st	Z+, r19
 724:	de f6       	brtc	.-74     	; 0x6dc <__ultoa_invert+0xe>
 726:	cf 01       	movw	r24, r30
 728:	08 95       	ret
 72a:	46 2f       	mov	r20, r22
 72c:	47 70       	andi	r20, 0x07	; 7
 72e:	40 5d       	subi	r20, 0xD0	; 208
 730:	41 93       	st	Z+, r20
 732:	b3 e0       	ldi	r27, 0x03	; 3
 734:	0f d0       	rcall	.+30     	; 0x754 <__ultoa_invert+0x86>
 736:	c9 f7       	brne	.-14     	; 0x72a <__ultoa_invert+0x5c>
 738:	f6 cf       	rjmp	.-20     	; 0x726 <__ultoa_invert+0x58>
 73a:	46 2f       	mov	r20, r22
 73c:	4f 70       	andi	r20, 0x0F	; 15
 73e:	40 5d       	subi	r20, 0xD0	; 208
 740:	4a 33       	cpi	r20, 0x3A	; 58
 742:	18 f0       	brcs	.+6      	; 0x74a <__ultoa_invert+0x7c>
 744:	49 5d       	subi	r20, 0xD9	; 217
 746:	31 fd       	sbrc	r19, 1
 748:	40 52       	subi	r20, 0x20	; 32
 74a:	41 93       	st	Z+, r20
 74c:	02 d0       	rcall	.+4      	; 0x752 <__ultoa_invert+0x84>
 74e:	a9 f7       	brne	.-22     	; 0x73a <__ultoa_invert+0x6c>
 750:	ea cf       	rjmp	.-44     	; 0x726 <__ultoa_invert+0x58>
 752:	b4 e0       	ldi	r27, 0x04	; 4
 754:	a6 95       	lsr	r26
 756:	97 95       	ror	r25
 758:	87 95       	ror	r24
 75a:	77 95       	ror	r23
 75c:	67 95       	ror	r22
 75e:	ba 95       	dec	r27
 760:	c9 f7       	brne	.-14     	; 0x754 <__ultoa_invert+0x86>
 762:	00 97       	sbiw	r24, 0x00	; 0
 764:	61 05       	cpc	r22, r1
 766:	71 05       	cpc	r23, r1
 768:	08 95       	ret
 76a:	9b 01       	movw	r18, r22
 76c:	ac 01       	movw	r20, r24
 76e:	0a 2e       	mov	r0, r26
 770:	06 94       	lsr	r0
 772:	57 95       	ror	r21
 774:	47 95       	ror	r20
 776:	37 95       	ror	r19
 778:	27 95       	ror	r18
 77a:	ba 95       	dec	r27
 77c:	c9 f7       	brne	.-14     	; 0x770 <__ultoa_invert+0xa2>
 77e:	62 0f       	add	r22, r18
 780:	73 1f       	adc	r23, r19
 782:	84 1f       	adc	r24, r20
 784:	95 1f       	adc	r25, r21
 786:	a0 1d       	adc	r26, r0
 788:	08 95       	ret

0000078a <__prologue_saves__>:
 78a:	2f 92       	push	r2
 78c:	3f 92       	push	r3
 78e:	4f 92       	push	r4
 790:	5f 92       	push	r5
 792:	6f 92       	push	r6
 794:	7f 92       	push	r7
 796:	8f 92       	push	r8
 798:	9f 92       	push	r9
 79a:	af 92       	push	r10
 79c:	bf 92       	push	r11
 79e:	cf 92       	push	r12
 7a0:	df 92       	push	r13
 7a2:	ef 92       	push	r14
 7a4:	ff 92       	push	r15
 7a6:	0f 93       	push	r16
 7a8:	1f 93       	push	r17
 7aa:	cf 93       	push	r28
 7ac:	df 93       	push	r29
 7ae:	cd b7       	in	r28, 0x3d	; 61
 7b0:	de b7       	in	r29, 0x3e	; 62
 7b2:	ca 1b       	sub	r28, r26
 7b4:	db 0b       	sbc	r29, r27
 7b6:	0f b6       	in	r0, 0x3f	; 63
 7b8:	f8 94       	cli
 7ba:	de bf       	out	0x3e, r29	; 62
 7bc:	0f be       	out	0x3f, r0	; 63
 7be:	cd bf       	out	0x3d, r28	; 61
 7c0:	09 94       	ijmp

000007c2 <__epilogue_restores__>:
 7c2:	2a 88       	ldd	r2, Y+18	; 0x12
 7c4:	39 88       	ldd	r3, Y+17	; 0x11
 7c6:	48 88       	ldd	r4, Y+16	; 0x10
 7c8:	5f 84       	ldd	r5, Y+15	; 0x0f
 7ca:	6e 84       	ldd	r6, Y+14	; 0x0e
 7cc:	7d 84       	ldd	r7, Y+13	; 0x0d
 7ce:	8c 84       	ldd	r8, Y+12	; 0x0c
 7d0:	9b 84       	ldd	r9, Y+11	; 0x0b
 7d2:	aa 84       	ldd	r10, Y+10	; 0x0a
 7d4:	b9 84       	ldd	r11, Y+9	; 0x09
 7d6:	c8 84       	ldd	r12, Y+8	; 0x08
 7d8:	df 80       	ldd	r13, Y+7	; 0x07
 7da:	ee 80       	ldd	r14, Y+6	; 0x06
 7dc:	fd 80       	ldd	r15, Y+5	; 0x05
 7de:	0c 81       	ldd	r16, Y+4	; 0x04
 7e0:	1b 81       	ldd	r17, Y+3	; 0x03
 7e2:	aa 81       	ldd	r26, Y+2	; 0x02
 7e4:	b9 81       	ldd	r27, Y+1	; 0x01
 7e6:	ce 0f       	add	r28, r30
 7e8:	d1 1d       	adc	r29, r1
 7ea:	0f b6       	in	r0, 0x3f	; 63
 7ec:	f8 94       	cli
 7ee:	de bf       	out	0x3e, r29	; 62
 7f0:	0f be       	out	0x3f, r0	; 63
 7f2:	cd bf       	out	0x3d, r28	; 61
 7f4:	ed 01       	movw	r28, r26
 7f6:	08 95       	ret

000007f8 <_exit>:
 7f8:	f8 94       	cli

000007fa <__stop_program>:
 7fa:	ff cf       	rjmp	.-2      	; 0x7fa <__stop_program>
